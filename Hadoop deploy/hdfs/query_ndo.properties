hive-write-data-format=parquet
audit-column-name=last_updt_dtm
audit_table_metadata=audit_table_metadata.csv

###############Referral Patterns###################

query_etg_clm_outpt="select * from <SOURCE_DB>.etg_clm_outpt"
query_pcr_cost_epsd="select * from <SOURCE_DB>.pcr_cost_epsd"
query_clm_prov="select * from <SOURCE_DB>.clm_prov"
query_prov="select * from <SOURCE_DB>.prov"
query_etg_cnfnmnt="select * from <SOURCE_DB>.etg_cnfnmnt"
query_etg_prov_smry="select * from <SOURCE_DB>.etg_prov_smry"
query_api_prov="select * from <WAREHOUSE_DB>.api_prov"
query_max_etg_run_id="select max(ETG_RUN_ID) from <SOURCE_DB>.pcr_cost_epsd"
target_table_rfrl_ptrn="NDO_RFRL_PTRN"
max_etg_run_id=27


###############PCR_SUB_SPCLTY###################

query_pcr_sub_spclty_exprnc="select trim(npi ) as npi,trim(tax_id ) as tax_id,mcid as mcid,etg_run_id  as etg_run_id,srvc_dt  as srvc_dt,trim(hlth_srvc_cd ) as hlth_srvc_cd,trim(hlth_srvc_type_cd ) as hlth_srvc_type_cd,trim(spcl_proc_ctgry_desc ) as SPCL_PROC_CTGRY_DESC,trim(src_sys_sor_cd ) as src_sys_sor_cd,load_log_key  as load_log_key,crctd_load_log_key  as crctd_load_log_key,updtd_load_log_key  as updtd_load_log_key,prov_spclty_prmry_cd,prov_spclty_prmry_desc from <SOURCE_DB>.pcr_sub_spclty_exprnc_view"
query_max_etg_run_id_pcr_sub_spclty="select max(etg_run_id) from   <SOURCE_DB>.pcr_sub_spclty_exprnc_view"
target_pcr_sub_spclty="pcr_sub_spclty_exprnc"

###############MLR#######################################
query_fact_rsttd_mbrshp = "select * from <SOURCE_DB>.fact_rsttd_mbrshp where pcp_prov_tax_id not in ('Xx','-2')"
query_fact_rsttd_rvnu = "select * from <SOURCE_DB>.fact_rsttd_rvnu where pcp_prov_tax_id not in ('Xx','-2')"
query_fact_rsttd_expns = "select * from <SOURCE_DB>.fact_rsttd_expns where pcp_prov_tax_id not in ('Xx','-2')"
query_ddim_srvcarea = "select * from <SOURCE_DB>.ddim_srvcarea"
query_ddim_bnft_plan = "select * from <SOURCE_DB>.ddim_bnft_plan"
query_ddim_prov_tax_id = "select * from <SOURCE_DB>.ddim_prov_tax_id"
query_ddim_hcc = "select * from <SOURCE_DB>.ddim_hcc"
query_fact_phrmcy_clm_smry="select * from <SOURCE_DB>.fact_phrmcy_clm_smry where pcp_prov_tax_id not in ('Xx','-2')"
query_ddim_age_mnth="select * from <SOURCE_DB>.ddim_age_mnth"


##prior_begin_yyyymm= "201605"
##prior_end_yyyymm= "201704"
##current_begin_yyyymm= "201705"
##current_end_yyyymm= "201804"

priorPeriod= "PRIOR_PRD"
currentPeriod="CURNT_PRD"
span= "12"
hclvl="150000"

tab_mlr_svc_area = "mlr_svc_area"
tab_mlr_ben_plan = "mlr_ben_plan"
tab_mlr_hcc = "mlr_hcc"
tab_mlr_mbr = "mlr_mbr"
tab_mlr_mbr_rank = "mlr_mbr_rank"
tab_mlr_allprov = "mlr_allprov"
tab_mlr_prv_name = "mlr_prv_name"
tab_mlr_fin_prv_name = "mlr_fin_prv_name"
tab_mlr_rev = "mlr_rev"
tab_mlr_exp = "mlr_exp"
tab_api_mlr_dtl = "API_MLR_DTL"
tab_mlr_mbr_end = "mlr_mbr_end"
tab_api_mlr_smry = "API_MLR_SMRY"
tab_mlr_data_smry = "mlr_data_smry"
tab_api_mlr_smry_bkp = "api_mlr_smry_bkp"
tab_api_mlr_dtl_bkp = "api_mlr_dtl_bkp"
tab_mlr_data_smry_g="mlr_data_smry_g"
tab_mlr_age_median="mlr_age_median"
tab_ndo_phrmcy_clm_smry="ndo_phrmcy_clm_smry"


####################### PROF SPEND####################

query_src_tbl_nm="PSRUSCURRENT"
query_tgt_tbl_nm="UI_PRFSNL_SPND_SMRY"

query_psruscurrent ="select * from <SOURCE_DB>.psruscurrent"



####################### PROF REFERRAL PATTERN ############
query_prof_referral_pattern_clm_max_rvsn="SELECT Trim(MBR_KEY) as MBR_KEY,Trim(CLM_ADJSTMNT_KEY) as CLM_ADJSTMNT_KEY FROM <SOURCE_DB>.clm_max_rvsn"

query_prof_referral_pattern_clm="SELECT Trim(SRC_BILLG_TAX_ID) AS  SRC_BILLG_TAX_ID,Trim(DIAG_1_CD) as DIAG_1_CD,Trim(CLM_ADJSTMNT_KEY) as CLM_ADJSTMNT_KEY,trim(CLM_ITS_HOST_CD) as CLM_ITS_HOST_CD,Trim(SRVC_RNDRG_TYPE_CD) as SRVC_RNDRG_TYPE_CD FROM <SOURCE_DB>.clm"
###where CLM_ITS_HOST_CD not in('HOST','JAACL') and SRVC_RNDRG_TYPE_CD  in('PHYSN','PANCL')

query_prof_referral_pattern_clm_line="SELECT BILLD_CHRG_AMT,ALWD_AMT,PAID_AMT,trim(CLM_ADJSTMNT_KEY) as CLM_ADJSTMNT_KEY,ADJDCTN_DT,CLM_LINE_SRVC_STRT_DT,CLM_LINE_STTS_CD,Trim(CLM_LINE_NBR) as CLM_LINE_NBR,CLM_LINE_SRVC_END_DT FROM <SOURCE_DB>.clm_line"
##where ADJDCTN_DT  >= '2017-01-01' and ADJDCTN_DT  <= '2018-03-31' and CLM_LINE_SRVC_STRT_DT  >= '2017-01-01' and CLM_LINE_SRVC_STRT_DT  <= '2017-12-31' and CLM_LINE_STTS_CD in('APRVD','PD') and ##alwd_amt > 0

query_prof_referral_pattern_clm_line_coa="SELECT Trim(CLM_ADJSTMNT_KEY) as CLM_ADJSTMNT_KEY,Trim(MBU_CF_CD) as MBU_CF_CD,Trim(PROD_CF_CD) as PROD_CF_CD FROM <SOURCE_DB>.clm_line_coa"

query_prof_referral_pattern_bot_pcr_fncl_mbu_cf="SELECT Trim(PCR_CNTRCTD_ST_DESC) as PCR_CNTRCTD_ST_DESC,Trim(PCR_LOB_DESC) as PCR_LOB_DESC,Trim(MBU_CF_CD) as MBU_CF_CD from <SOURCE_DB>.bot_pcr_fncl_mbu_cf"

query_prof_referral_pattern_bot_pcr_fncl_prod_cf="SELECT Trim(PROD_CF_CD) as PROD_CF_CD,Trim(PCR_PROD_DESC) as PCR_PROD_DESC from <SOURCE_DB>.bot_pcr_fncl_prod_cf"

query_prof_referral_pattern_mbr="select Trim(MBR_KEY) as MBR_KEY,Trim(MBRSHP_SOR_CD) as MBRSHP_SOR_CD,Trim(SRC_GRP_NBR) as SRC_GRP_NBR,Trim(SBSCRBR_ID) as SBSCRBR_ID,Trim(MBR_SQNC_NBR) as MBR_SQNC_NBR, TRIM(tknzd_src_key) as tknzd_src_key FROM <SOURCE_DB>.mbr"

query_prof_referral_pattern_mdm_ppltn_xwalk="Select MCID,XWALK_TRMNTN_DT,XWALK_EFCTV_DT,trim(ALT_KEY) as ALT_KEY,Trim(SRC_KEY) as SRC_KEY,TRIM(tknzd_src_key) as tknzd_src_key FROM <SOURCE_DB>.mdm_ppltn_xwalk"

query_prof_referral_pattern_mbr_adrs_hist="SELECT VRSN_CLOS_DT,VRSN_OPEN_DT,Trim(ADRS_TYPE_CD) as ADRS_TYPE_CD,Trim(ZIP_CD) as ZIP_CD,Trim(MBR_KEY) as MBR_KEY from <SOURCE_DB>.mbr_adrs_hist"

query_prof_referral_pattern_src_cms_nppes="SELECT * FROM <SOURCE_DB>.SRC_CMS_NPPES"

query_prof_referral_pattern_bkbn_ip_bv="SELECT * FROM <SOURCE_DB>.BKBN_IP_BV"

query_prof_referral_pattern_clm_prov="SELECT CLM_ADJSTMNT_KEY,trim(CLM_PROV_ROLE_CD) as CLM_PROV_ROLE_CD,trim(CLM_PROV_ID_TYPE_CD) as CLM_PROV_ID_TYPE_CD,trim(SRC_CLM_PROV_ID) as SRC_CLM_PROV_ID,trim(RPTG_PROV_ZIP_CD) as RPTG_PROV_ZIP_CD FROM <SOURCE_DB>.CLM_PROV where upper(trim(CLM_PROV_ID_TYPE_CD)) in ('NPI','TAX') and substring(trim(SRC_CLM_PROV_ID), 1, 1) in ('0','1','2','3','4','5','6','7','8','9') and trim(SRC_CLM_PROV_ID)!= '0000000000'"

query_prof_referral_pattern_clm_line_prov="SELECT CLM_ADJSTMNT_KEY,trim(CLM_LINE_PROV_ROLE_CD) as CLM_LINE_PROV_ROLE_CD,trim(CLM_LINE_PROV_ID_TYPE_CD) as CLM_LINE_PROV_ID_TYPE_CD,trim(SRC_CLM_LINE_PROV_ID) as SRC_CLM_LINE_PROV_ID,trim(RPTG_PROV_ZIP_CD) as RPTG_PROV_ZIP_CD FROM <SOURCE_DB>.CLM_LINE_PROV where  upper(trim(CLM_LINE_PROV_ID_TYPE_CD)) in ('NPI','TAX') and substring(trim(SRC_CLM_LINE_PROV_ID), 1, 1) in ('0','1','2','3','4','5','6','7','8','9') and trim(SRC_CLM_LINE_PROV_ID)!= '0000000000'"

query_prof_referral_pattern_diag="SELECT * FROM <SOURCE_DB>.diag"

#adjdctn_start_dt="2017-01-01"
#adjdctn_end_dt="2018-03-31"
#clm_line_srvc_strt_dt="2017-01-01"
#clm_line_srvc_end_dt="2017-12-31"

tab_prof="prof"
tab_prof_nppes="PROF_NPPES"
tab_prof_pdl="PROF_PDL"
tab_prof_pdl_npi="PROF_PDL_NPI"
tab_prof_pdl_tax="PROF_PDL_TAX"
tab_prof_ref_npi="PROF_REF_NPI"
tab_prof_ref_tax="PROF_REF_TAX"
tab_prof_bil_npi="PROF_BIL_NPI"
tab_prof_bil_tax="PROF_BIL_TAX"
tab_prof_ren_npi="PROF_REN_NPI"
tab_prof_ren_tax="PROF_REN_TAX"
tab_prof_final_report="prof_final_report"
tab_prof_final_report_bkp="prof_final_report_bkp"

###################EHOPPA######################
###Source tables

query_inpatient_summary="select trim(MEDCR_ID)  as MEDCR_ID,trim(PROV_ST_NM)  as  PROV_ST_NM,trim(MBUlvl2)  as MBUlvl2,trim(prodlvl3) as  prodlvl3,trim(MCS)  as  MCS,trim(liccd)  as  liccd,trim(MBU_CF_CD)  as  MBU_CF_CD,trim(FNL_DRG_CD) as  FNL_DRG_CD,trim(cat1)  as  cat1,trim(cat2)  as  cat2,CMAD_CASES,CMAD,trim(PROV_ZIP_CD)  as PROV_ZIP_CD,trim(fundlvl2)  as  fundlvl2,trim(MBUlvl4)  as  MBUlvl4,trim(MBUlvl3)  as  MBUlvl3,trim(EXCHNG_IND_CD)  as  EXCHNG_IND_CD,trim(system_id)  as  system_id,upper(trim(prov_county))  as  prov_county,trim(INN_CD)  as  INN_CD,cast(round(ALWD_AMT,2) as decimal(18,2)) as ALWD_AMT,cast(round(BILLD_CHRG_AMT,2) as decimal(18,2)) as BILLD_CHRG_AMT,cast(round(PAID_AMT,2) as decimal(18,2)) as PAID_AMT,CASES,trim(ER_Flag)  as  ER_Flag,CMAD_ALLOWED,trim(MBR_State)  as  MBR_State,trim(Inc_Month)  as Inc_Month,upper(trim(MBR_County))  as MBR_County,trim(CLM_LINE_ENCNTR_CD)  as  CLM_LINE_ENCNTR_CD,trim(brand)  as brand,trim(MBR_ZIP_CD)  as MBR_ZIP_CD,trim(PROV_NM)  as  PROV_NM,cast(round(ALWD_AMT_WITH_CMS,2) as decimal(18,2)) as ALWD_AMT_WITH_CMS,cast(round(CMS_REIMBMNT_AMT,2) as decimal(18,2)) as CMS_REIMBMNT_AMT,trim(RPTG_NTWK_DESC)  as  RPTG_NTWK_DESC  from <SOURCE_DB>.inpatient_Summary"

query_outpatient_detail="select trim(INN_CD)  as  INN_CD,(upper(trim(MBR_County)))  as  MBR_County,trim(MBR_State)  as MBR_State,trim(MBR_ZIP3)  as  MBR_ZIP3,trim(MBR_ZIP_CD)  as  MBR_ZIP_CD,trim(MBU_CF_CD)  as  MBU_CF_CD,trim(MBUlvl2)  as MBUlvl2,trim(MBUlvl3)  as  MBUlvl3,trim(MBUlvl4)  as  MBUlvl4,trim(MCS)  as  MCS,trim(MEDCR_ID)  as  MEDCR_ID,trim(PROV_ST_NM)  as PROV_ST_NM,trim(fundlvl2)  as  fundlvl2,trim(liccd)  as  liccd,trim(Inc_Month)  as  Inc_Month,trim(prodlvl3)  as prodlvl3,upper(trim(prov_county))  as  prov_county,trim(CLM_LINE_ENCNTR_CD)  as  CLM_LINE_ENCNTR_CD,trim(brand)  as  brand from <SOURCE_DB>.outpatient_detail"


query_outpatient_summary="select trim(cat1) as cat1, trim(cat2) as cat2,trim(ER_Flag) as ER_Flag,trim(MEDCR_ID) as MEDCR_ID,trim(PROV_ST_NM) as PROV_ST_NM,trim(PROV_ZIP_CD) as PROV_ZIP_CD,trim(MBUlvl2) as MBUlvl2,  trim(MBUlvl3) as MBUlvl3, trim(MBUlvl4) as MBUlvl4,trim(prodlvl3) as prodlvl3,trim(EXCHNG_IND_CD) as EXCHNG_IND_CD,trim(MCS) as MCS,trim(liccd) as liccd,trim(MBU_CF_CD) as MBU_CF_CD,trim(fundlvl2) as fundlvl2,trim(MBR_State) as MBR_State, upper(trim(MBR_County)) as MBR_County,upper(trim(prov_county)) as prov_county,trim(system_id) as system_id,trim(INN_CD) as INN_CD,cast(round(ALWD_AMT,2) as decimal(18,2)) as ALWD_AMT,cast(round(BILLD_CHRG_AMT,2) as decimal(18,2)) as BILLD_CHRG_AMT,cast(round(PAID_AMT,2) as decimal(18,2)) as PAID_AMT,CASES,CMAD_CASES,CMAD_ALLOWED,CMAD,trim(MBR_ZIP3) as MBR_ZIP3,trim(Inc_Month) as Inc_Month, trim(CLM_LINE_ENCNTR_CD) as CLM_LINE_ENCNTR_CD,trim(brand) as brand,trim(PROV_NM) as PROV_NM,cast(round(ALWD_AMT_WITH_CMS,2) as decimal(18,2)) as ALWD_AMT_WITH_CMS,cast(round(CMS_allowed,2) as decimal(18,2)) as CMS_allowed,trim(RPTG_NTWK_DESC) as RPTG_NTWK_DESC from <SOURCE_DB>.outpatient_Summary"

query_facility_attribute_profile="select trim(MEDCR_ID) as MEDCR_ID,trim(FACTYPE) as FACTYPE,trim(HOSPITAL) as HOSPITAL,trim(RATING_AREA) as RATING_AREA from <SOURCE_DB>.FACILITY_ATTRIBUTE_PROFILE"

query_ndo_zip_submarket_xwalk_Ehoppa="select trim(zip_cd) as Zip_Code, trim(rating_area_desc) as RATING_AREA_DESC, trim(state) as st_cd,trim(cnty_cd) as cnty_cd,upper(trim(cnty_nm)) as cnty_nm,trim(rating_area) as rating_area from <SOURCE_DB>.ndo_zip_submarket_xwalk"

###Intermediate tables
tab_ndowrk_hoppa_prov_list = "ndowrk_hoppa_prov_list"
tab_ndowrk_hoppa_cmad_bench = "ndowrk_hoppa_cmad_bench"
tab_ndowrk_hoppa_outp="ndowrk_hoppa_outp"
tab_ndowrk_hoppa_inp="ndowrk_hoppa_inp"
tab_ndowrk_hoppa_mbr_ratg_inp="ndowrk_hoppa_mbr_ratg_inp"
tab_ndowrk_hoppa_mbr_ratg_outp="ndowrk_hoppa_mbr_ratg_outp"
tab_ndowrk_hoppa_mbr_cnty_inp="ndowrk_hoppa_mbr_cnty_inp"
tab_ndowrk_hoppa_mbr_cnty_outp="ndowrk_hoppa_mbr_cnty_outp"


tabndowrkOutpZip1 = "ndowrk_outp_zip1"
tabndowrkOutpZip2 = "ndowrk_outp_zip2"

###Target tables
tab_ndo_ehoppa_base = "ndo_ehoppa_base"
tab_ndo_ehoppa_base_bkp = "ndo_ehoppa_base_bkp"
tab_ndo_ehoppa_base_mbr = "ndo_ehoppa_base_mbr"
tab_ndo_ehoppa_base_mbr_bkp = "ndo_ehoppa_base_mbr_bkp"
tab_ndo_ehoppa_base_mbr_cnty = "ndo_ehoppa_base_mbr_cnty"
tab_ndo_ehoppa_base_mbr_cnty_bkp = "ndo_ehoppa_base_mbr_cnty_bkp"


###################EHOPPA######################

###################CONTROL TOTAL######################

query_ndo_ehoppa_base="select * from <WAREHOUSE_DB>.ndo_ehoppa_base"
query_ndo_ehoppa_base_mbr_cnty="select * from <WAREHOUSE_DB>.ndo_ehoppa_base_mbr_cnty"
query_ndo_ehoppa_base_mbr="select * from <WAREHOUSE_DB>.ndo_ehoppa_base_mbr"
query_ui_prfsnl_spnd_smry="select * from <WAREHOUSE_DB>.ui_prfsnl_spnd_smry"
tab_ndo_ehoppa_cntrl="ehoppa_cntrl"
tab_ui_prfsnl_spnd_smry="ui_prfsnl_spnd_smry"
tab_api_prfsnl_spnd_cntrl="api_prfsnl_spnd_cntrl"

#################ETG_EPSD_COST#########################

#query_pcr_cost_epsd="select bkbn_snap_year_mnth_nbr,trim(grp_agrgtn_type_cd) AS grp_agrgtn_type_cd,trim(bnchmrk_prod_desc) AS bnchmrk_prod_desc,trim(spclty_prmry_cd) AS spclty_prmry_cd,trim(pcr_lob_desc) AS pcr_lob_desc,trim(ntwk_st_cd) AS ntwk_st_cd,trim(peer_mrkt_cd) AS peer_mrkt_cd,trim(grp_agrgtn_id) AS grp_agrgtn_id,trim(grp_agrgtn_nm) AS grp_agrgtn_nm,mcid,etg_run_id,trim(etg_base_cls_cd) AS etg_base_cls_cd,trim(epsd_nbr) AS epsd_nbr,trim(spclty_prmry_desc) AS spclty_prmry_desc,trim(pdl_svrty_lvl_cd) AS pdl_svrty_lvl_cd,trim(scrbl_etg_ind_cd) AS scrbl_etg_ind_cd,epsd_totl_anlzd_alwd_amt,peer_grp_avg_anlzd_alwd_amt,epsd_oe_wgtd_nbr,epsd_no_fi_totl_anlzd_alwd_amt,peer_totl_anlzd_alwd_amt,peer_anlzd_fclty_alwd_amt,peer_grp_epsd_vol_cnt from <SOURCE_DB>.pcr_cost_epsd"
query_fncl_prod_cf="select trim(prod_cf_cd) as prod_cf_cd,trim(prod_lvl_2_desc) as prod_lvl_2_desc from <SOURCE_DB>.FNCL_PROD_CF"
query_ndo_zip_submarket_xwalk="select trim(zip_cd) as Zip_Code, trim(rating_area_desc) as submarket_NM, trim(state) as st_cd,trim(cnty_cd) as cnty_cd,upper(trim(cnty_nm)) as cnty_nm,trim(rating_area) as rating_area from <SOURCE_DB>.ndo_zip_submarket_xwalk"
query_pcr_etg_mbr_smry="select trim(ZIP_CD) as ZIP_CD,trim(MBR_RSDNT_ST_CD) as MBR_RSDNT_ST_CD,mcid,trim(ETG_RUN_ID) as ETG_RUN_ID, trim(MBU_CF_CD) as MBU_CF_CD, trim(PROD_CF_CD) as PROD_CF_CD from <SOURCE_DB>.PCR_ETG_MBR_SMRY"
query_fncl_mbu_cf="select trim(MBU_CF_CD) as MBU_CF_CD,trim(MBU_LVL_2_DESC) as MBU_LVL_2_DESC from <SOURCE_DB>.FNCL_MBU_CF"
query_etg_base_cls_cd="select trim(ETG_BASE_CLS_CD) as ETG_BASE_CLS_CD,trim(cd_val_nm) as cd_val_nm  from <SOURCE_DB>.ETG_BASE_CLS_CD"
query_mlsa_zip_cd="select trim(ACTV_ZIP_IND) as ACTV_ZIP_IND,trim(ZIP_CD) as ZIP_CD,trim(ST_CD) as ST_CD,trim(fips_cnty_cd) as CNTY_NM from <SOURCE_DB>.MLSA_ZIP_CD"
query_api_prov_wrk1="select trim(AGRGTN_TYPE_CD) as AGRGTN_TYPE_CD,trim(PROV_TAX_ID) as PROV_TAX_ID from <STAGING_DB>.api_prov_wrk1"
query_epsd_ndowrk_ratg_addr="select * from <WAREHOUSE_DB>.ndowrk_ratg_addr"
query_pcr_etg_smry="select * from <SOURCE_DB>.pcr_etg_smry"
target_table_etg_epsd_cost="WORK_API_ETG_EPSD_COST"
query_pcr_elgbl_prov="select * from <SOURCE_DB>.pcr_elgbl_prov"
query_pcr_grp_efcncy_ratio="select * from <SOURCE_DB>.pcr_grp_efcncy_ratio"
query_BKBN_IP_BV="select * from <SOURCE_DB>.BKBN_IP_BV"
query_qlty_nrw_ntwk_tax_spclty="select * from <SOURCE_DB>.qlty_nrw_ntwk_tax_spclty"
query_pcr_grp_efcncy_ratio_multi_splt="select * from <SOURCE_DB>.pcr_grp_efcncy_ratio_multi_splt"
tab_ndowrk_epds_cost2="ndowrk_epds_cost2"
tab_ndowrk_epsd_cost="ndowrk_epsd_cost"
tab_ndowrk_epsd_cost_bkp="ndowrk_epsd_cost_bkp"


#########QHIP################################################

query_qhip="select * from <SOURCE_DB>.qhip_test"
query_ehoppa_base="select hosp_nm,prov_st_cd from <WAREHOUSE_DB>.ndo_ehoppa_base"
tab_qhip="qhip"
tab_qhip_bkp="qhip_bkp"

##############################NDO_RATG_WRK################################

tab_ndo_ratg_area="ndo_ratg_area"
tab_ndo_ratg_addr1="ndo_ratg_addr1"
tab_ndo_ratg_bar1="ndo_ratg_bar1"
tab_ndowrk_ratg_addr="ndowrk_ratg_addr"
tab_ndowrk_ratg_addr_bkp="ndowrk_ratg_addr_bkp"

query_ndo_ratg_area="SELECT STATE,RATING_AREA,ZIP_CD,CNTY_CD,CNTY_NM,RATING_AREA_DESC FROM <SOURCE_DB>.ndo_zip_submarket_xwalk union select c.state , c.rating_area ,  c.zip_cd , '000' as CNTY_CD , 'NONE' as cnty_nm, c.rating_area_desc from <SOURCE_DB>.ndo_zip_submarket_xwalk c inner join (select  a.state, a.zip_cd, count(*) as cntr2 from (select  state, zip_cd ,rating_area_desc from <SOURCE_DB>.ndo_zip_submarket_xwalk group by state, zip_cd,rating_area_desc )a group by a.state, a.zip_cd having cntr2 = 1 ) b on b.state = c.state and b.zip_cd = c.zip_cd group by c.state , c.rating_area ,  c.zip_cd , '000' , 'NONE', c.rating_area_desc"

query_ndo_ratg_addr1="SELECT EP_TAX_ID,ratg_st_cd,ratg_area_desc FROM (SELECT EP_TAX_ID,ratg_st_cd,ratg_area_desc,PRMRY_ST_IND,case when ratg_area_desc = '99 - NOTF' then 2 else 1 end AS  RAT,case when PRMRY_ST_IND = 'Y' then 1 else 2 end AS PRMRY,ROW_NUMBER() OVER (PARTITION BY  EP_TAX_ID, ratg_st_cd order by EP_TAX_ID,  ratg_st_cd ,case when ratg_area_desc = '99 - NOTF' then 2 else 1 end,case when PRMRY_ST_IND = 'Y' then 1 else 2 end, ratg_area_desc asc  ) seq FROM (SELECT v.EP_TAX_ID,case when s1.state is not NULL and v.NTWK_ST_CD = s1.state then v.NTWK_ST_CD when s2.state is not NULL and v.PADRS_TIN_ST_CD = s2.state then v.PADRS_TIN_ST_CD else 'UNK' end as ratg_st_cd , case when  x.rating_area_desc is not null then x.rating_area_desc when x.rating_area_desc is null then coalesce(t.rating_area_desc, '99 - NOTF')end  as ratg_area_desc,v.PRMRY_ST_IND as PRMRY_ST_IND from <SOURCE_DB>.BKBN_IP_BV v inner join ( select distinct PROV_TAX_ID from <WAREHOUSE_DB>.API_PROV_WRK where AGRGTN_TYPE_CD = 'TIN' )  b on b.PROV_TAX_ID = v.EP_TAX_ID left outer join (SELECT distinct STATE,  CNTY_NM , ZIP_CD,  RATING_AREA_DESC from <STAGING_DB>.ndo_ratg_area where  CNTY_CD <> '000') x on ( x.state = v.NTWK_ST_CD or x.state = v.PADRS_TIN_ST_CD) and   v.PADRS_TIN_CNTY_NM = x.cnty_nm and  v.PADRS_TIN_ZIP_CD = x.zip_cd left outer join  (SELECT  distinct STATE,  ZIP_CD,  RATING_AREA_DESC from <STAGING_DB>.ndo_ratg_area where  CNTY_CD = '000' ) t on ( t.state = v.NTWK_ST_CD or t.state = v.PADRS_TIN_ST_CD) and  v.PADRS_TIN_ZIP_CD = t.zip_cd left outer join ( select distinct state from <SOURCE_DB>.ndo_zip_submarket_xwalk ) s1 on s1.state =  v.NTWK_ST_CD left outer join ( select distinct state from <SOURCE_DB>.ndo_zip_submarket_xwalk ) s2 on s2.state =  v.PADRS_TIN_ST_CD where v.SNAP_YEAR_MNTH_NBR = <SNAP_NBR> and (  v.NTWK_ST_CD in (select distinct state from <SOURCE_DB>.ndo_zip_submarket_xwalk) or v.PADRS_TIN_ST_CD in (select distinct state from <SOURCE_DB>.ndo_zip_submarket_xwalk) )) DUPL) ndo_ratg_bar1 WHERE seq=1"

query_ndo_ratg_bar1="select distinct d.TAX_ID, d.ADRS_ST_PRVNC_CD, case when  x.rating_area_desc is not null then x.rating_area_desc when x.rating_area_desc is null then coalesce(t.rating_area_desc, '99 - NOTF') end  as ratg_area_desc from <SOURCE_DB>.BKBN_ADRS_RLTNSHP d inner join (select  distinct EP_TAX_ID, ratg_st_cd  from <STAGING_DB>.ndo_ratg_addr1 where  ratg_area_desc =  '99 - NOTF' ) a on a.EP_TAX_ID = d.TAX_ID and a.ratg_st_cd = d.ADRS_ST_PRVNC_CD left outer join ( SELECT  distinct  STATE,  CNTY_NM , ZIP_CD,  RATING_AREA_DESC from <STAGING_DB>.NDO_RATG_AREA where  CNTY_CD <> '000' ) x on x.state = d.ADRS_ST_PRVNC_CD and d.CNTY_NM = x.cnty_nm and d.ADRS_POSTL_CD = x.zip_cd left outer join ( SELECT  distinct STATE,  ZIP_CD,  RATING_AREA_DESC from <STAGING_DB>.NDO_RATG_AREA where  CNTY_CD = '000' ) t on t.state = d.ADRS_ST_PRVNC_CD and d.ADRS_POSTL_CD = t.zip_cd where d.SNAP_YEAR_MNTH_NBR = <SNAP_NBR> and d.PRMRY_ADRS_CD = 'Y' and d.ADRS_TYPE_DESC like 'Practice%' and d.ADRS_ST_PRVNC_CD  in (select distinct state from <SOURCE_DB>.ndo_zip_submarket_xwalk)"

query_ndowrk_ratg_addr="select distinct a.EP_TAX_ID as Prov_Tax_id ,  a.ratg_st_cd , case  when a.ratg_area_desc <>  '99 - NOTF' then a.ratg_area_desc  else coalesce(b.ratg_area_desc, '99 - NOTF')  end as rating_area_desc from <STAGING_DB>.ndo_ratg_addr1 a left outer join ( select  x.TAX_ID, x.ADRS_ST_PRVNC_CD, x.ratg_area_desc from <STAGING_DB>.ndo_ratg_bar1 x inner join (  select  TAX_ID, ADRS_ST_PRVNC_CD, count(*) as cntrb from <STAGING_DB>.ndo_ratg_bar1 group by TAX_ID, ADRS_ST_PRVNC_CD  having cntrb = 1 ) y on y.TAX_ID = x.TAX_ID and y.ADRS_ST_PRVNC_CD = x.ADRS_ST_PRVNC_CD ) b on b.TAX_ID = a.EP_TAX_ID and b.ADRS_ST_PRVNC_CD = a.ratg_st_cd"

query_bkbn_ip_bv="select distinct SNAP_YEAR_MNTH_NBR as SNAP_YEAR_MNTH_NBR from <SOURCE_DB>.bkbn_ip_bv"
query_bkbn_adrs_rltnshp="select distinct SNAP_YEAR_MNTH_NBR as SNAP_YEAR_MNTH_NBR from <SOURCE_DB>.bkbn_adrs_rltnshp"

##########################################################API PROV##################################################

api_query_pcr_elgbl_prov="select BKBN_SNAP_YEAR_MNTH_NBR,TRIM(BNCHMRK_PROD_DESC) AS BNCHMRK_PROD_DESC,TRIM(SPCLTY_PRMRY_CD) AS SPCLTY_PRMRY_CD,TRIM(PCR_LOB_DESC) AS PCR_LOB_DESC,TRIM(NTWK_ST_CD) AS NTWK_ST_CD,TRIM(PEER_MRKT_CD) AS PEER_MRKT_CD,TRIM(TAX_ID) AS TAX_ID,TRIM(NPI) AS NPI,TRIM(PRMRY_SUBMRKT_CD) AS PRMRY_SUBMRKT_CD,TRIM(SPCLTY_PRMRY_DESC) AS SPCLTY_PRMRY_DESC from <SOURCE_DB>.pcr_elgbl_prov"

api_query_pcr_grp_efcncy_ratio="select TRIM(GRP_AGRGTN_TYPE_CD) AS GRP_AGRGTN_TYPE_CD,BKBN_SNAP_YEAR_MNTH_NBR,TRIM(NTWK_ST_CD) AS NTWK_ST_CD,TRIM(PEER_MRKT_CD) AS PEER_MRKT_CD,TRIM(GRP_AGRGTN_ID) AS GRP_AGRGTN_ID,TRIM(PCR_LOB_DESC) AS PCR_LOB_DESC,TRIM(BNCHMRK_PROD_DESC) AS BNCHMRK_PROD_DESC, GRP_DSTNCT_EPSD_CNT, GRP_SCRBL_AVG_EPSD_OE_VOL_WGTD_NBR, GRP_OE_LOWR_CNFDNC_LVL_VOL_WGTD_NBR, GRP_OE_UPR_CNFDNC_LVL_VOL_WGTD_NBR,GRP_SCRBL_AVG_EPSD_NRMLZD_OE_VOL_WGTD_NBR, GRP_OE_LOWR_CNFDNC_LVL_NRMLZD_VOL_WGTD_NBR , GRP_OE_UPR_CNFDNC_LVL_NRMLZD_VOL_WGTD_NBR, trim(prmry_submrkt_cd) as prmry_submrkt_cd , SPCLTY_PRMRY_CD from <SOURCE_DB>.pcr_grp_efcncy_ratio"

api_query_bkbn_ip="select SNAP_YEAR_MNTH_NBR,TRIM(NPI) AS NPI,TRIM(SPCLTY_PRMRY_CD) AS SPCLTY_PRMRY_CD,TRIM(IP_LGL_FRST_NM) AS IP_LGL_FRST_NM,TRIM(IP_LGL_LAST_NM) AS IP_LGL_LAST_NM from <SOURCE_DB>.bkbn_ip"

api_query_pcr_grp_efcncy_ratio_multi_splt="select * from <SOURCE_DB>.pcr_grp_efcncy_ratio_multi_splt"

api_query_bkbn_tax_id="select TRIM(EP_TAX_ID) AS EP_TAX_ID,SNAP_YEAR_MNTH_NBR,TRIM(EP_TAX_ID_1099_NM) AS EP_TAX_ID_1099_NM from <SOURCE_DB>.bkbn_tax_id"

api_query_bot_submrkt="select TRIM(SUBMRKT_CD) AS SUBMRKT_CD,TRIM(SUBMRKT_DESC) AS SUBMRKT_DESC,TRIM(SUBMRKT_ST_CD) AS SUBMRKT_ST_CD  from <SOURCE_DB>.bot_submrkt"

api_query_bkbn_ip_bv="select SNAP_YEAR_MNTH_NBR,TRIM(PRMRY_ST_IND) AS PRMRY_ST_IND,TRIM(EP_TAX_ID) AS EP_TAX_ID,TRIM(NTWK_ST_CD) AS NTWK_ST_CD,TRIM(PADRS_TIN_ST_CD) AS PADRS_TIN_ST_CD,TRIM(PADRS_TIN_CNTY_NM) AS PADRS_TIN_CNTY_NM from <SOURCE_DB>.bkbn_ip_bv"

api_query_bkbn_adrs_rltnshp="select TRIM(CNTY_NM) AS CNTY_NM,TRIM(tax_id) AS tax_id,TRIM(ADRS_ST_PRVNC_CD) AS ADRS_ST_PRVNC_CD,SNAP_YEAR_MNTH_NBR,TRIM(ADRS_TYPE_CD) AS ADRS_TYPE_CD from <SOURCE_DB>.bkbn_adrs_rltnshp"

api_query_qlty_nrw_ntwk_tax_spclty="select * from <SOURCE_DB>.qlty_nrw_ntwk_tax_spclty"

tab_api_prov_wrk1="api_prov_wrk1"
tab_api_prov_wrk="api_prov_wrk"
tab_api_wrk_prov_cnty="api_wrk_prov_cnty"
tab_api_prov="api_prov"
tab_api_prov_bkp="api_prov_bkp"

############################API ETG GROUP###################
api_query_api_prov_wrk="select * from <WAREHOUSE_DB>.api_prov_wrk"
tab_api_etg_grp="api_etg_group"
tab_api_etg_grp_bkp="api_etg_group_bkp"
tab_api_etg_group_spclty="api_etg_group_spclty"
tab_api_etg_group_spclty_bkp="api_etg_group_spclty_bkp"

##########################RENDERING FACILITY######################
query_pcr_etg_clm_outpt="select * from <SOURCE_DB>.pcr_etg_clm_outpt"
query_medcr_prov_anlytc_patch="select * from <SOURCE_DB>.medcr_prov_anlytc_patch"
tab_ndo_fclty_cost="ndo_fclty_cost"
tab_ndo_fclty_cost_bkp="ndo_fclty_cost_bkp"

################API MBR PPLTN##################
api_mbr_query_rsttd_mbrshp_mnth_cnt="select ELGBLTY_CLNDR_MNTH_END_DT,trim(MBU_CF_CD) as MBU_CF_CD ,trim(PROD_CF_CD) as PROD_CF_CD ,trim(MBR_KEY) as MBR_KEY,MDCL_EXPSR_NBR from <SOURCE_DB>.rsttd_mbrshp_mnth_cnt"
api_mbr_query_mbr_adrs="select trim(MBRSHP_SOR_CD) as MBRSHP_SOR_CD,trim(ADRS_TYPE_CD) as ADRS_TYPE_CD,trim(MBR_KEY) as MBR_KEY,trim(ZIP_CD) as ZIP_CD,trim(RCRD_STTS_CD) as RCRD_STTS_CD,trim(ST_PRVNC_CD) as ST_PRVNC_CD from <SOURCE_DB>.mbr_adrs"
api_mbr_query_bot_pcr_fncl_mbu_cf="select trim(MBU_CF_CD) as MBU_CF_CD,trim(PCR_LOB_DESC) as PCR_LOB_DESC from <SOURCE_DB>.bot_pcr_fncl_mbu_cf"
api_mbr_query_bot_pcr_fncl_prod_cf="select trim(PROD_CF_CD) as PROD_CF_CD,trim(PCR_PROD_DESC) as PCR_PROD_DESC from <SOURCE_DB>.bot_pcr_fncl_prod_cf"
api_mbr_query_fncl_prod_cf="select trim(PROD_CF_CD) as PROD_CF_CD,trim(PROD_LVL_1_DESC) as PROD_LVL_1_DESC from <SOURCE_DB>.fncl_prod_cf"
api_mbr_query_bot_submrkt="select trim(ADRS_POSTL_CD) as ADRS_POSTL_CD,trim(SUBMRKT_DESC) as SUBMRKT_DESC,trim(SUBMRKT_CD) as SUBMRKT_CD from <SOURCE_DB>.bot_submrkt"
tab_api_mbr_ppltn="API_MBR_PPLTN"
tab_api_mbr_ppltn_bkp="API_MBR_PPLTN_BKP"

################API QLT GROUP##################
api_query_qlty_nrw_ntwk_npi="select * from <SOURCE_DB>.qlty_nrw_ntwk_npi"
tab_api_qlt_group="api_qlt_group"
tab_api_qlt_group_bkp="api_qlt_group_bkp"

##############PROF RFRL COST #######################
tab_ndo_prof_rfrl_cost = "ndo_prof_rfrl_cost"
tab_ndo_prof_rfrl_cost_bkp = "ndo_prof_rfrl_cost_bkp"

############## MEDCR RLTVTY ##############

tab_medcr_rltvty = "ndo_medcr_rltvty"
tab_medcr_rltvty_bkp = "ndo_medcr_rltvty_bkp"


query_inpatient_summary_medcr="select trim(MEDCR_ID)  as MEDCR_ID,trim(PROV_ST_NM)  as  PROV_ST_NM,trim(MBUlvl2)  as MBUlvl2,trim(prodlvl3) as  prodlvl3,trim(MCS)  as  MCS,trim(liccd)  as  liccd,trim(MBU_CF_CD)  as  MBU_CF_CD,trim(FNL_DRG_CD) as  FNL_DRG_CD,trim(cat1)  as  cat1,trim(cat2)  as  cat2,CMAD_CASES,CMAD,trim(PROV_ZIP_CD)  as PROV_ZIP_CD,trim(fundlvl2)  as  fundlvl2,trim(MBUlvl4)  as  MBUlvl4,trim(MBUlvl3)  as  MBUlvl3,trim(EXCHNG_IND_CD)  as  EXCHNG_IND_CD,trim(system_id)  as  system_id,upper(trim(prov_county))  as  prov_county,trim(INN_CD)  as  INN_CD,cast(round(ALWD_AMT,2) as decimal(18,2)) as ALWD_AMT,cast(round(BILLD_CHRG_AMT,2) as decimal(18,2)) as BILLD_CHRG_AMT,cast(round(PAID_AMT,2) as decimal(18,2)) as PAID_AMT,cast(round(CVRD_EXPNS_AMT,2) as decimal(18,2)) as CVRD_EXPNS_AMT,CASES,trim(ER_Flag)  as  ER_Flag,CMAD_ALLOWED,trim(MBR_State)  as  MBR_State,trim(Inc_Month)  as Inc_Month,upper(trim(MBR_County))  as MBR_County,trim(CLM_LINE_ENCNTR_CD)  as  CLM_LINE_ENCNTR_CD,trim(brand)  as brand,trim(MBR_ZIP3) as MBR_ZIP3,trim(PROV_NM)  as  PROV_NM,cast(round(ALWD_AMT_WITH_CMS,2) as decimal(18,2)) as ALWD_AMT_WITH_CMS,cast(round(CMS_REIMBMNT_AMT,2) as decimal(18,2)) as CMS_REIMBMNT_AMT,trim(RPTG_NTWK_DESC)  as  RPTG_NTWK_DESC  from <SOURCE_DB>.inpatient_Summary"

query_outpatient_summary_medcr="select trim(cat1) as cat1, trim(cat2) as cat2,trim(ER_Flag) as ER_Flag,trim(MEDCR_ID) as MEDCR_ID,trim(PROV_ST_NM) as PROV_ST_NM,trim(PROV_ZIP_CD) as PROV_ZIP_CD,trim(MBUlvl2) as MBUlvl2,  trim(MBUlvl3) as MBUlvl3, trim(MBUlvl4) as MBUlvl4,trim(prodlvl3) as prodlvl3,trim(EXCHNG_IND_CD) as EXCHNG_IND_CD,trim(MCS) as MCS,trim(liccd) as liccd,trim(MBU_CF_CD) as MBU_CF_CD,trim(fundlvl2) as fundlvl2,trim(MBR_State) as MBR_State, upper(trim(MBR_County)) as MBR_County,upper(trim(prov_county)) as prov_county,trim(system_id) as system_id,trim(INN_CD) as INN_CD,cast(round(ALWD_AMT,2) as decimal(18,2)) as ALWD_AMT,cast(round(BILLD_CHRG_AMT,2) as decimal(18,2)) as BILLD_CHRG_AMT,cast(round(PAID_AMT,2) as decimal(18,2)) as PAID_AMT,cast(round(CVRD_EXPNS_AMT,2) as decimal(18,2)) as CVRD_EXPNS_AMT,CASES,CMAD_CASES,CMAD_ALLOWED,CMAD,trim(MBR_ZIP3) as MBR_ZIP3,trim(Inc_Month) as Inc_Month, trim(CLM_LINE_ENCNTR_CD) as CLM_LINE_ENCNTR_CD,trim(brand) as brand,trim(PROV_NM) as PROV_NM,cast(round(ALWD_AMT_WITH_CMS,2) as decimal(18,2)) as ALWD_AMT_WITH_CMS,cast(round(CMS_allowed,2) as decimal(18,2)) as CMS_allowed,trim(RPTG_NTWK_DESC) as RPTG_NTWK_DESC from <SOURCE_DB>.outpatient_Summary"

query_facility_attribute_profile_medcr="select trim(MEDCR_ID) as MEDCR_ID,trim(FACTYPE) as FACTYPE,trim(HOSPITAL) as HOSPITAL,trim(RATING_AREA) as RATING_AREA,trim(Hosp_System) as Hosp_System from <SOURCE_DB>.FACILITY_ATTRIBUTE_PROFILE"

query_ndt_rating_area_aca_zip3="select trim(zip3) as zip3, trim(rating_area_desc) as RATING_AREA_DESC, trim(state) as state,trim(cnty_cd) as cnty_cd,upper(trim(cnty_nm)) as cnty_nm,trim(rating_area) as rating_area from <SOURCE_DB>.worktbl_ndt_rating_area_aca_zip3"


#############EPSD COST CNTY#######
query_api_prov_wrk="select trim(AGRGTN_TYPE_CD) as AGRGTN_TYPE_CD,trim(PROV_TAX_ID) as PROV_TAX_ID from <WAREHOUSE_DB>.api_prov_wrk"
tab_api_etg_epsd_cost_cnty="api_etg_epsd_cost_cnty"
tab_api_etg_epsd_cost_cnty_bkp="api_etg_epsd_cost_cnty_bkp"

############## Pharmacy Cost ##############

tab_ndo_phrmcy_cost= "ndo_phrmcy_cost"
tab_ndo_phrmcy_cost_bkp = "ndo_phrmcy_cost_bkp"

query_phrmcy_clm_line = "select aprvd_ingred_amt, aprvd_fee_amt, aprvd_sales_tax_amt, trim(clm_adjstmnt_key) as clm_adjstmnt_key , trim(clm_line_nbr) as clm_line_nbr, trim(clm_sor_cd) as clm_sor_cd, trim(trnsctn_stts_cd) as trnsctn_stts_cd from <SOURCE_DB>.phrmcy_clm_line"

query_clm_line = "select trim(clm_adjstmnt_key) as clm_adjstmnt_key, trim(clm_line_nbr) as clm_line_nbr, trim(clm_sor_cd) as clm_sor_cd, adjdctn_dt, trim(BNFT_PKG_ID) as BNFT_PKG_ID from <SOURCE_DB>.clm_line"

query_clm = "select trim(clm_adjstmnt_key) as clm_adjstmnt_key, trim(clm_sor_cd) as clm_sor_cd , adjdctn_dt as adjdctn_dt, to_date(rx_filled_dt) as rx_filled_dt from <SOURCE_DB>.clm"

query_clm_line_coa = "select trim(mbu_cf_cd) as mbu_cf_cd,trim(clm_adjstmnt_key) as clm_adjstmnt_key,trim(clm_line_nbr) as clm_line_nbr ,trim(clm_sor_cd) as clm_sor_cd,trim(prod_cf_cd) as prod_cf_cd from <SOURCE_DB>.clm_line_coa"

query_phrmcy_clm = "select trim(src_cust_id) as src_cust_id, trim(clm_adjstmnt_key) as clm_adjstmnt_key, trim(clm_sor_cd) as clm_sor_cd  from <SOURCE_DB>.phrmcy_clm"

query_gl_cf_mbu_hrzntl_hrchy = "select trim(mbu_cf_cd) as mbu_cf_cd, trim(gl_lvl_4_desc) as gl_lvl_4_desc from <SOURCE_DB>.gl_cf_mbu_hrzntl_hrchy"

query_fncl_prod_cf_phrmcy="select trim(prod_cf_cd) as prod_cf_cd,trim(prod_lvl_2_desc) as prod_lvl_2_desc from <SOURCE_DB>.FNCL_PROD_CF"

query_fncl_mbu_cf_phrmcy="select trim(MBU_CF_CD) as MBU_CF_CD,trim(MBU_LVL_2_DESC) as MBU_LVL_2_DESC,trim(brnd_desc) as brnd_desc from <SOURCE_DB>.FNCL_MBU_CF"

###################################### PEG #######################
tab_api_peg_grp="API_PEG_GROUP"
tab_api_peg_grp_bkp="API_PEG_GROUP_BKP"
tab_api_peg_group_spclty="API_PEG_GROUP_SPCLTY"
tab_api_peg_group_spclty_bkp="API_PEG_GROUP_SPCLTY_BKP"
tab_peg_epsd_cost="API_PEG_EPSD_COST"
tab_peg_epsd_cost_bkp="API_PEG_EPSD_COST_BKP"
query_peg_ctgry_cd="select trim(PEG_CTGRY_CD) as PEG_CTGRY_CD, trim(CD_VAL_NM) as CD_VAL_NM from <SOURCE_DB>.peg_ctgry_cd"
